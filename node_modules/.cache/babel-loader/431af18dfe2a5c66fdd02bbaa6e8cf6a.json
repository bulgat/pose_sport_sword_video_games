{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bulga\\\\posenetkol\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useRef } from \"react\";\nimport \"./App.css\";\nimport \"./Canvas.js\";\nimport { GameParam } from './GameParam';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Webcam from \"react-webcam\";\nimport { drawKeypoints, drawSkeleton } from \"./utilities\";\nimport ReactKol, { Component } from 'react'; //import { Router, Route } from \"react-router-dom\";\n\nimport animals from './data';\nimport AnimalCard from './AnimalCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const CANVAS_WIDTH = new GameParam().CANVAS_WIDTH;\n  const CANVAS_HEIGHT = new GameParam().CANVAS_HEIGHT;\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); //  Load posenet\n\n  const runPosenet = async () => {\n    const net = await posenet.load({\n      inputResolution: {\n        width: 640,\n        height: 480\n      },\n      scale: 0.8\n    }); //\n\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const detect = async net => {\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Make Detections\n\n      const pose = await net.estimateSinglePose(video); // console.log(pose.keypoints[0].part+\"  x = \"+pose.keypoints[0].position.x+\"  y = \"+pose.keypoints[0].position.y);\n      //console.log(pose.keypoints[7].part+\"  x = \"+pose.keypoints[7].position.x+\"  y = \"+pose.keypoints[7].position.y);\n      //console.log(pose.keypoints[8].part+\"  x = \"+pose.keypoints[8].position.x+\"  y = \"+pose.keypoints[8].position.y);\n      //console.log(pose.keypoints[7].part+\"  score = \"+pose.keypoints[7].score+\"  score = \"+pose.keypoints[8].score);\n\n      window.Nose = pose.keypoints[0];\n      window.RightArm = pose.keypoints[8];\n      window.LeftArm = pose.keypoints[7]; //console.log(pose);\n\n      drawCanvas(pose, video, videoWidth, videoHeight, canvasRef);\n    }\n  };\n\n  const drawCanvas = (pose, video, videoWidth, videoHeight, canvas) => {\n    const ctx = canvas.current.getContext(\"2d\");\n    canvas.current.width = videoWidth;\n    canvas.current.height = videoHeight;\n    drawKeypoints(pose[\"keypoints\"], 0.6, ctx);\n    drawSkeleton(pose[\"keypoints\"], 0.7, ctx); //drawCanvasBattle();\n  };\n\n  runPosenet(); //////////\n\n  const root = /*#__PURE__*/React.createElement('div', {}, \"TTTTTTTTTTTT\");\n\n  class MyReact extends Component {}\n\n  ; //////////\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myCanvas\",\n      width: \"640\",\n      height: \"350\",\n      style: {\n        textAlign: \"center\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        top: 30\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"scriptCanvas/scriptCanvas.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"progress\", {\n        className: \"w3-container w3-red\",\n        id: \"health\",\n        value: \"100\",\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      style: {\n        position: \"absolute\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        textAlign: \"down\",\n        zindex: 9,\n        width: 320,\n        height: 240\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: \"absolute\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        textAlign: \"down\",\n        zindex: 9,\n        width: 320,\n        height: 240\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"AwQWgsmsPhWgADiRou0jnDEtoH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/bulga/posenetkol/src/App.js"],"names":["logo","React","useRef","GameParam","tf","posenet","Webcam","drawKeypoints","drawSkeleton","ReactKol","Component","animals","AnimalCard","App","CANVAS_WIDTH","CANVAS_HEIGHT","webcamRef","canvasRef","runPosenet","net","load","inputResolution","width","height","scale","setInterval","detect","current","video","readyState","videoWidth","videoHeight","pose","estimateSinglePose","window","Nose","keypoints","RightArm","LeftArm","drawCanvas","canvas","ctx","getContext","root","createElement","MyReact","textAlign","marginLeft","marginRight","top","position","left","right","zindex"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useRef } from \"react\";\nimport \"./App.css\";\nimport \"./Canvas.js\";\nimport { GameParam } from './GameParam';\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Webcam from \"react-webcam\";\nimport { drawKeypoints, drawSkeleton } from \"./utilities\";\nimport ReactKol, {Component} from 'react';\n//import { Router, Route } from \"react-router-dom\";\nimport animals from './data';\nimport AnimalCard from './AnimalCard';\n\nfunction App() {\n\t\n\tconst CANVAS_WIDTH =new GameParam().CANVAS_WIDTH;\n\tconst CANVAS_HEIGHT =new GameParam().CANVAS_HEIGHT;\n\t\n\t\n\t const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\t\n\t //  Load posenet\n  const runPosenet = async () => {\n    const net = await posenet.load({\n      inputResolution: { width: 640, height: 480 },\n      scale: 0.8,\n    });\n    //\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\t\n\t\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Make Detections\n      const pose = await net.estimateSinglePose(video);\n\t  \n\t // console.log(pose.keypoints[0].part+\"  x = \"+pose.keypoints[0].position.x+\"  y = \"+pose.keypoints[0].position.y);\n\t  //console.log(pose.keypoints[7].part+\"  x = \"+pose.keypoints[7].position.x+\"  y = \"+pose.keypoints[7].position.y);\n\t  //console.log(pose.keypoints[8].part+\"  x = \"+pose.keypoints[8].position.x+\"  y = \"+pose.keypoints[8].position.y);\n\t  \n\t   //console.log(pose.keypoints[7].part+\"  score = \"+pose.keypoints[7].score+\"  score = \"+pose.keypoints[8].score);\n\t\n\t  window.Nose = pose.keypoints[0];\n\t  window.RightArm = pose.keypoints[8];\n\t  window.LeftArm = pose.keypoints[7];\n      //console.log(pose);\n\n      drawCanvas(pose, video, videoWidth, videoHeight, canvasRef);\n    }\n  };\n\t\n\n\t\n\t\n\t\n\tconst drawCanvas = (pose, video, videoWidth, videoHeight, canvas) => {\n\t\tconst ctx = canvas.current.getContext(\"2d\");\n\t\tcanvas.current.width = videoWidth;\n\t\tcanvas.current.height = videoHeight;\n\n\t   drawKeypoints(pose[\"keypoints\"], 0.6, ctx);\n\t   drawSkeleton(pose[\"keypoints\"], 0.7, ctx);\n\t   \n\t   //drawCanvasBattle();\n  };\n\t\n\trunPosenet();\n\t\n\t\n  \t//////////\nconst root = React.createElement('div',{},\"TTTTTTTTTTTT\");\n\t\n\tclass MyReact extends Component {\n\t\t\n\t};\n\n\t\n\t//////////\n\n  return (\n  \n   <div className=\"App\">\n   \n   <canvas id=\"myCanvas\" width=\"640\" height=\"350\"  style={{textAlign: \"center\",marginLeft: \"auto\",marginRight: \"auto\",top:30}}></canvas>\n   \n   <script src=\"scriptCanvas/scriptCanvas.js\"></script>\n\n   \n   <div>\n   <progress  className=\"w3-container w3-red\" id=\"health\" value=\"100\" max=\"100\"></progress>\n   </div>\n   \n      \n\t   \n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"down\",\n            zindex: 9,\n            width: 320,\n            height: 240,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"down\",\n            zindex: 9,\n            width: 320,\n            height: 240,\n          }}\n        />\n\n    </div>\n\t\n  );\n  \n\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}