{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bulga\\\\posenetkol\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useRef } from \"react\";\nimport \"./App.css\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Webcam from \"react-webcam\";\nimport { drawKeypoints, drawSkeleton } from \"./utilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); //  Load posenet\n\n  const runPosenet = async () => {\n    const net = await posenet.load({\n      inputResolution: {\n        width: 640,\n        height: 480\n      },\n      scale: 0.8\n    }); //\n\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const detect = async net => {\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Make Detections\n\n      const pose = await net.estimateSinglePose(video); // console.log(pose.keypoints[0].part+\"  x = \"+pose.keypoints[0].position.x+\"  y = \"+pose.keypoints[0].position.y);\n      //console.log(pose.keypoints[7].part+\"  x = \"+pose.keypoints[7].position.x+\"  y = \"+pose.keypoints[7].position.y);\n      //console.log(pose.keypoints[8].part+\"  x = \"+pose.keypoints[8].position.x+\"  y = \"+pose.keypoints[8].position.y);\n      //console.log(pose.keypoints[7].part+\"  score = \"+pose.keypoints[7].score+\"  score = \"+pose.keypoints[8].score);\n      //console.log(pose);\n\n      drawCanvas(pose, video, videoWidth, videoHeight, canvasRef);\n    }\n  };\n\n  const drawCanvas = (pose, video, videoWidth, videoHeight, canvas) => {\n    const ctx = canvas.current.getContext(\"2d\");\n    canvas.current.width = videoWidth;\n    canvas.current.height = videoHeight;\n    drawKeypoints(pose[\"keypoints\"], 0.6, ctx);\n    drawSkeleton(pose[\"keypoints\"], 0.7, ctx);\n    drawCanvasBattle();\n  };\n\n  runPosenet(); //////////\n\n  var loadCanvas = false;\n  const base_image = new Image();\n  base_image.src = 'scriptCanvas/scriptCanvas.js';\n\n  base_image.onload = function () {\n    loadCanvas = true;\n  };\n\n  const drawCanvasBattle = () => {\n    var context = document.getElementById(\"myCanvas\");\n\n    if (context != null) {\n      console.log(\"draw =\" + base_image);\n      var ctx = context.getContext(\"2d\");\n      ctx.moveTo(0, 0);\n      ctx.lineTo(200, 100);\n      ctx.stroke();\n\n      if (loadCanvas) {\n        ctx.drawImage(base_image, 0, 0);\n      }\n    }\n  }; //////////\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myCanvas\",\n      width: \"300\",\n      height: \"300\",\n      style: {\n        position: \"absolute\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"scriptCanvas/scriptCanvas.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"AwQWgsmsPhWgADiRou0jnDEtoH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/bulga/posenetkol/src/App.js"],"names":["logo","React","useRef","tf","posenet","Webcam","drawKeypoints","drawSkeleton","App","webcamRef","canvasRef","runPosenet","net","load","inputResolution","width","height","scale","setInterval","detect","current","video","readyState","videoWidth","videoHeight","pose","estimateSinglePose","drawCanvas","canvas","ctx","getContext","drawCanvasBattle","loadCanvas","base_image","Image","src","onload","context","document","getElementById","console","log","moveTo","lineTo","stroke","drawImage","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useRef } from \"react\";\nimport \"./App.css\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Webcam from \"react-webcam\";\nimport { drawKeypoints, drawSkeleton } from \"./utilities\";\n\nfunction App() {\n\t const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\t\n\t //  Load posenet\n  const runPosenet = async () => {\n    const net = await posenet.load({\n      inputResolution: { width: 640, height: 480 },\n      scale: 0.8,\n    });\n    //\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\t\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Make Detections\n      const pose = await net.estimateSinglePose(video);\n\t  \n\t // console.log(pose.keypoints[0].part+\"  x = \"+pose.keypoints[0].position.x+\"  y = \"+pose.keypoints[0].position.y);\n\t  //console.log(pose.keypoints[7].part+\"  x = \"+pose.keypoints[7].position.x+\"  y = \"+pose.keypoints[7].position.y);\n\t  //console.log(pose.keypoints[8].part+\"  x = \"+pose.keypoints[8].position.x+\"  y = \"+pose.keypoints[8].position.y);\n\t  \n\t   //console.log(pose.keypoints[7].part+\"  score = \"+pose.keypoints[7].score+\"  score = \"+pose.keypoints[8].score);\n\t\n\t  \n      //console.log(pose);\n\n      drawCanvas(pose, video, videoWidth, videoHeight, canvasRef);\n    }\n  };\n\t\n\tconst drawCanvas = (pose, video, videoWidth, videoHeight, canvas) => {\n\t\tconst ctx = canvas.current.getContext(\"2d\");\n\t\tcanvas.current.width = videoWidth;\n\t\tcanvas.current.height = videoHeight;\n\n\t   drawKeypoints(pose[\"keypoints\"], 0.6, ctx);\n\t   drawSkeleton(pose[\"keypoints\"], 0.7, ctx);\n\t   \n\t   drawCanvasBattle();\n  };\n\t\n\trunPosenet();\n\t\n  \t//////////\n\t\n\tvar loadCanvas = false;\n\tconst base_image = new Image();\n\t\t  base_image.src = 'scriptCanvas/scriptCanvas.js';\n\t\t  base_image.onload = function(){\n\t\t\t  loadCanvas=true;\n\t\t}\n\t\n\tconst drawCanvasBattle = () =>{\n\t\tvar context = document.getElementById(\"myCanvas\");\n\t\t\n\n\t\tif (context!=null){\n\t\t\tconsole.log(\"draw =\"+base_image);\n\t\t\tvar ctx = context.getContext(\"2d\");\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(200, 100);\n\t\t\tctx.stroke();\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (loadCanvas){\n\t\t\t\tctx.drawImage(base_image, 0, 0);\n\t\t\t}\n\t\t}\n\t};\n\t\n\n\t\n\t//////////\n\n  return (\n  \n   <div className=\"App\">\n   \n   <canvas id=\"myCanvas\" width=\"300\" height=\"300\"  style={{position: \"absolute\"}}></canvas>\n   <script src=\"scriptCanvas/scriptCanvas.js\"></script>\n      <header className=\"App-header\">\n\t   \n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n  \n\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}